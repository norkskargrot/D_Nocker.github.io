<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Nic Docker</title>
    <subtitle>I&#x27;m a designer and developer with a love for crafting engaging experiences.</subtitle>
    <link href="https://nic.dockerz.net/atom.xml" rel="self" type="application/atom+xml"/>
    <link href="https://nic.dockerz.net"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2023-05-18T00:00:00+00:00</updated>
    <id>https://nic.dockerz.net/atom.xml</id>
    <entry xml:lang="en">
        <title>500 byte flight simulator</title>
        <published>2023-05-18T00:00:00+00:00</published>
        <updated>2023-05-18T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://nic.dockerz.net/blog/2023-5-18-500-byte-flightsim/" type="text/html"/>
        <id>https://nic.dockerz.net/blog/2023-5-18-500-byte-flightsim/</id>
        <content type="html">&lt;h2 id=&quot;playable-demo&quot;&gt;Playable Demo&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Steer using the left&#x2F;right arrows.&lt;&#x2F;li&gt;
&lt;li&gt;Pitch up and down using the up&#x2F;down arrows.&lt;&#x2F;li&gt;
&lt;li&gt;The plane has momentum, when you pitch down you will gain speed quickly, when you pitch up you&#x27;ll slow again.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;iframe class= &quot;pico8player&quot; src=&quot;&#x2F;blog&#x2F;2023-5-18-500-byte-flightsim&#x2F;plane.html&quot;... &gt;&lt;&#x2F;iframe&gt;
&lt;h2 id=&quot;the-500-bytes&quot;&gt;The 500 bytes&lt;&#x2F;h2&gt;
&lt;p&gt;Here is all of the code which makes that demo work:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#151515;color:#e8e8d3;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;24405&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;z&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;.3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;g&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;h&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;v&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;.2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;q&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;127&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;poke2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)☉=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;camera
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;512 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;do
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;circfill&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;q&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;rnd&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;q&lt;&#x2F;span&gt;&lt;span&gt;),&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;rnd&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;),&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;mset&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;end
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;pal&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;spr&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;96&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;29&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;4112&lt;&#x2F;span&gt;&lt;span&gt;)::_::b=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;btn&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;g&lt;&#x2F;span&gt;&lt;span&gt;+=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;v&lt;&#x2F;span&gt;&lt;span&gt;*((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;-(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;))&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;g&lt;&#x2F;span&gt;&lt;span&gt;*=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;.9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;+=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;g
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;h&lt;&#x2F;span&gt;&lt;span&gt;+=(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;)&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;-(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;)&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;j&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;h&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;64&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;z&lt;&#x2F;span&gt;&lt;span&gt;+=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;v&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;sin&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;j&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;v&lt;&#x2F;span&gt;&lt;span&gt;-=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;j&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;40&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;sin&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;cos&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span&gt;-=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;v
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span&gt;-=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;v
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;k&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;z
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;cls&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;pal&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;do
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;==&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;h&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;pal&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;k&lt;&#x2F;span&gt;&lt;span&gt;-=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;k&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;h&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;)*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;tline&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;q&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;,-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;end
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;g&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;999&lt;&#x2F;span&gt;&lt;span&gt;☉(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;64&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;j&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;80&lt;&#x2F;span&gt;&lt;span&gt;)?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#556633;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#99ad6a;&quot;&gt;\b⬆️&lt;&#x2F;span&gt;&lt;span style=&quot;color:#556633;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;14
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;line&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span&gt;,-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;,-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;)?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#556633;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#99ad6a;&quot;&gt;¥&lt;&#x2F;span&gt;&lt;span style=&quot;color:#556633;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;j&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;9
&lt;&#x2F;span&gt;&lt;span&gt;☉()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;z&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;flip&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;goto &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;_
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This is looking entirely illegible, so how did it get to this point? &lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-vision&quot;&gt;The Vision&lt;&#x2F;h2&gt;
&lt;p&gt;Since the &#x27;tline&#x27; function had been added to Pico8, I have been wanting to create something that uses it&#x27;s potential. This function allows drawing textured lines from the map data, with dramatically faster performance than you might expect from Pico8. Some of the most practical uses I have seen of this is for 2d sprite rotation, textured polygon drawing, and mode7-style plane rendering, for floors and roofs with a distinct 3d appearance. On hearing about the Tweet-Tweet Jam, a challenge to create a game in 500 characters of code, I took this as an opportunity to explore.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;making-some-noise&quot;&gt;Making some noise&lt;&#x2F;h2&gt;
&lt;p&gt;Before we can draw some 3d clouds or land, we need an image to draw. In my previous Pico8-projects I have created noise for terrain shapes or clouds via a number of methods, including placing random points and blurring them, placing points and bilinearly sampling between them, trig function based &#x27;plasma&#x27;, and more. All of these were far too large for the code size limitations, however, so I took an easy fallback: drawing plenty of randomly placed circles.&lt;&#x2F;p&gt;
&lt;p&gt;To improve the look of the final image to be drawn, I wanted to add a second color. This would become the light edge highlight on the clouds, and the sandy shores on the ground&#x27;s islands. To achieve this, after drawing the circles, I then draw the whole spritesheet onto itself in a second colour, with a slight offset.&lt;&#x2F;p&gt;
&lt;p&gt;Using tline also requires that our data to be drawn exists in the map data, rather than just the sprite sheet, so with the following code we both draw our circles and put our sprites into the map data.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#151515;color:#e8e8d3;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;poke&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0x5F55&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- Set the draw state to draw into the sprite sheet, rather than to the screen
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- Draw 1000 circles with a random size (0-16 pixels) and color (0 or 1)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;999 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;do
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;circfill&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;rnd&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;128&lt;&#x2F;span&gt;&lt;span&gt;),&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;rnd&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;128&lt;&#x2F;span&gt;&lt;span&gt;),&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;rnd&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;),&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;rnd&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;end
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;pal&lt;&#x2F;span&gt;&lt;span&gt;({&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;}) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- Change colour to create edge highlights
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;spr&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- Draw the whole spritesheet with an offset
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- Set the required map data
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;256 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;do
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;mset&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;end
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;poke&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0x5F55&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0x60&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- Reset the draw state to draw into the screen instead of the spritesheet
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;poke2&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0x5F38&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0x1010&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- Set the tiling used by tline, so that the map repeats every 16 tiles
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This creates this lovely generated image which the rest of the graphics rely on. This texture doesn&#x27;t tile, but fixing that took up far too many bytes of code for me to worry about it. The colours we will pallette-swap into something more sensible later.&lt;&#x2F;p&gt;
&lt;img class = smallimagewithinpost src=&quot;&#x2F;blog&#x2F;2023-5-18-500-byte-flightsim&#x2F;noise.png&quot;&gt;
&lt;p&gt;Some changes were made to this initial generation code to squeeze down it&#x27;s size from what we see above, including:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Moving into a single for loop, iterating 512 times (the maximum we can before the map pokes start hitting data we don&#x27;t want it to).&lt;&#x2F;li&gt;
&lt;li&gt;Changing some values and functions to shorter variable names (q=127 w=16 and y=24405).&lt;&#x2F;li&gt;
&lt;li&gt;Creating a variable for poke2 (two of our pokes are single pokes, rather than poking two bytes, but we can save characters by using a variablised poke2 instead)&lt;&#x2F;li&gt;
&lt;li&gt;Moving from hex values to decimal (eliminating the 0x prefix).&lt;&#x2F;li&gt;
&lt;li&gt;Removing one set of brackets from the pal({2}) call, a trick which I heard from Pico8 expert @FSouchu on Twitter.&lt;&#x2F;li&gt;
&lt;li&gt;Changing one call of rnd(q) to i%q  and the colour randomisation to i%2 in the circle drawing, the visual difference of which is barely noticeable.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This leaves us with our final image creation code:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#151515;color:#e8e8d3;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;512 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;do
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;circfill&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;q&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;rnd&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;q&lt;&#x2F;span&gt;&lt;span&gt;),&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;rnd&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;),&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;mset&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;end
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;pal&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;spr&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;96&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;29&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;4112&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;diving-into-tline&quot;&gt;Diving into tline&lt;&#x2F;h2&gt;
&lt;p&gt;The code which I started with for drawing clouds is below:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#151515;color:#e8e8d3;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#888888;&quot;&gt;--[[ Variables
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;s: the scale of the clouds
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;a: the rotation of the view (about the vertical axis)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;h: the horizon line
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;x,y,z: the position of the view
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;]]--
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;cls&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- Fill the screen with blue
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;pal&lt;&#x2F;span&gt;&lt;span&gt;({&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;}) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- Palette swap our blue and maroon texture to more appropriate cloud colours
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;h &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;do &lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- Draw tlines from the top of the screen to the horizon line
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;z&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;h&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;sap&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;cap&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;sin&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;)*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;cos&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;)*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;s
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- The coords of the left and right points at the screen edges
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;lx&lt;&#x2F;span&gt;&lt;span&gt;=(-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;cap&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;sap&lt;&#x2F;span&gt;&lt;span&gt;)+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;x
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;ly&lt;&#x2F;span&gt;&lt;span&gt;=(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;sap&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;cap&lt;&#x2F;span&gt;&lt;span&gt;)+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;y
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;rx&lt;&#x2F;span&gt;&lt;span&gt;=(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;cap&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;sap&lt;&#x2F;span&gt;&lt;span&gt;)+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;x
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;ry&lt;&#x2F;span&gt;&lt;span&gt;=(-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;sap&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;cap&lt;&#x2F;span&gt;&lt;span&gt;)+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;y
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- The gradient of the tline in map space
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;dx&lt;&#x2F;span&gt;&lt;span&gt;=(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;rx&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;lx&lt;&#x2F;span&gt;&lt;span&gt;)&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;128
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;dy&lt;&#x2F;span&gt;&lt;span&gt;=(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;ry&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;ly&lt;&#x2F;span&gt;&lt;span&gt;)&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;128
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- Draw the line across the width of the screen
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;tline&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;127&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;lx&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;ly&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;dx&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;dy&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;end
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;pal&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- Reset the draw palette
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Initially I looped through this twice, once to draw the clouds and a second time to draw the ground, but as I played around with the movement, I realised something interesting. If you kept drawing past the horizon line, the view would &amp;quot;flip&amp;quot;, as p became negative. This would flip the drawing of the lines, effectively creating a second plane of clouds below the first. The issue was, as the player&#x27;s z coordinate changed both planes would appear to approach or recede together, braking the illusion of moving between two planes. This can be seen in this gif:&lt;&#x2F;p&gt;
&lt;img class = smallimagewithinpost src=&quot;&#x2F;blog&#x2F;2023-5-18-500-byte-flightsim&#x2F;doubleclouds.gif&quot;&gt; 
&lt;p&gt;By subtracting a value from the player&#x27;s z coordinate at the drawing point of the horizon line, it was possible to have the planes appear to recede or approach together. Combined with a pallette swap at the horizon line, both the clouds and land can be drawn very simply and with a very low character count:&lt;&#x2F;p&gt;
&lt;img class = smallimagewithinpost src=&quot;&#x2F;blog&#x2F;2023-5-18-500-byte-flightsim&#x2F;cloudsandland.gif&quot;&gt; 
&lt;p&gt;The illusion still breaks entirely if the player leaves the vertical boundaries of the world, seen in the gif below, but in the final game this was avoided by first making sure the player never has enough momentum to fly above the cloudline, and second by causing them to crash and restart if they would go below the ground plane.&lt;&#x2F;p&gt;
&lt;img class = smallimagewithinpost src=&quot;&#x2F;blog&#x2F;2023-5-18-500-byte-flightsim&#x2F;breakingverticalbounries.gif&quot;&gt; 
&lt;p&gt;From here a lot of the above drawing logic can be squeezed down and simplified with just algebra which, combined with some of the code-shrinking techniques described above, results in the following code for drawing the environment:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#151515;color:#e8e8d3;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;sin&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;cos&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;k&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;z
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;cls&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;pal&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;do
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;==&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;h&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;pal&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;k&lt;&#x2F;span&gt;&lt;span&gt;-=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;k&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;h&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;)*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;tline&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;q&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;,-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;end
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;starting-soaring&quot;&gt;Starting Soaring&lt;&#x2F;h2&gt;
&lt;p&gt;The clear next step is giving the player an interesting way to traverse this environment; it&#x27;s meant to be a game after all. I liked the idea of gliding mechanics, as flying seemed like the best way to provide vertical mobility, showing off the best parts of the environment rendering. I also personally thought it would be more interesting than powered plane flight.&lt;&#x2F;p&gt;
&lt;p&gt;My original vision for the game was to be first-person, as while I thought it would be better as a third-person game, I was skeptical I would have code space left to draw a character. This turned out to be wrong as I continued to squeeze down the character count, which I am very pleased about. A side effect of this is that the controls actually work as though it&#x27;s a first person game, with the view rotating about the camera, effectively also moving the player also, rather than it rotating about the player. This saves on characters and isn&#x27;t noticeable in the final product unless you look for it.&lt;&#x2F;p&gt;
&lt;p&gt;The expanded movement logic is as follows:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#151515;color:#e8e8d3;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#888888;&quot;&gt;--[[ Variables
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;a: the rotation of the view (about the vertical axis)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;g: the rate of change of a
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;h: the horizon line (effectively the pitch of the player&amp;#39;s view)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;v: the player&amp;#39;s current speed
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;x,y,z: the position of the player
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;]]--
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- The x axis of player input
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;ix&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;btn&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;ix&lt;&#x2F;span&gt;&lt;span&gt;-=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;btn&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;ix&lt;&#x2F;span&gt;&lt;span&gt;+=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- The y axis of player input
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;iy&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;btn&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;iy&lt;&#x2F;span&gt;&lt;span&gt;-=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;btn&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;iy&lt;&#x2F;span&gt;&lt;span&gt;+=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- Update the rotation of the view based on the x-input and current speed
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;g&lt;&#x2F;span&gt;&lt;span&gt;+=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;v&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;ix&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;512
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;g&lt;&#x2F;span&gt;&lt;span&gt;*=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;.9
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;+=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;g
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- Update the pitch&#x2F;horizon line based on the y-input
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;h&lt;&#x2F;span&gt;&lt;span&gt;+=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;iy
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- Update the z position based on the current pitch and speed
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;j&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;h&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;64&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;z&lt;&#x2F;span&gt;&lt;span&gt;+=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;v&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;sin&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;j&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- Update the speed based on the current pitch
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;v&lt;&#x2F;span&gt;&lt;span&gt;-=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;j&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;40
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- Update the player&amp;#39;s position based on the current angle and speed
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;sin&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;cos&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span&gt;-=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;v
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span&gt;-=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;v
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;There many issues with this flight model, but I think it found a good balance between how good it feels to fly, code size, and some semblance of realism. There wasn&#x27;t a tonne that could be done here to compress the code size, but the biggest saving was the change from using btn() and if statements to get the player input, to instead use a single btn() call, returning a bitfield of inputs, and bitwise operations. With this, and the removal of a lot of whitespace, the final compressed code became:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#151515;color:#e8e8d3;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;btn&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;g&lt;&#x2F;span&gt;&lt;span&gt;+=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;v&lt;&#x2F;span&gt;&lt;span&gt;*((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;-(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;))&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;g&lt;&#x2F;span&gt;&lt;span&gt;*=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;.9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;+=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;g
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;h&lt;&#x2F;span&gt;&lt;span&gt;+=(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;)&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;-(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;)&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;j&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;h&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;64&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;z&lt;&#x2F;span&gt;&lt;span&gt;+=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;v&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;sin&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;j&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;v&lt;&#x2F;span&gt;&lt;span&gt;-=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;j&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;40&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;sin&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;cos&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span&gt;-=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;v
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span&gt;-=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;v
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;k&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;z
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;drawing-a-plane&quot;&gt;Drawing a plane&lt;&#x2F;h2&gt;
&lt;p&gt;It was a very pleasant surprise when I realised that I would have space to include a plane, as I think it significantly improved both the look and feel of the game, even when it came at the cost of some other features like a properly tiling texture. The plane went through many iterations of visuals, with the earliest version, close to the final product, as follows:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#151515;color:#e8e8d3;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;xd&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;64&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;g&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;999 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- the x-coord to draw the plane at
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;yd&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;80&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;j&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w &lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- the y-coord to draw the plane at
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;--x and y offset for the plane&amp;#39;s wing tips based on the player&amp;#39;s current rate of turning
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;cos&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;g&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;k&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;sin&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;g&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- drawing the wings
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;line&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;xd&lt;&#x2F;span&gt;&lt;span&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;yd&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;k&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;xd&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;yd&lt;&#x2F;span&gt;&lt;span&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;k&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;line&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;xd&lt;&#x2F;span&gt;&lt;span&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;yd&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;k&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;xd&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;yd&lt;&#x2F;span&gt;&lt;span&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;k&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;14&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;-- drawing the main cabin
&lt;&#x2F;span&gt;&lt;span&gt;print(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#556633;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#99ad6a;&quot;&gt;⬆️&lt;&#x2F;span&gt;&lt;span style=&quot;color:#556633;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;xd&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;yd&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;14&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#888888;&quot;&gt;--drawing the tail
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;line&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;xd&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;yd&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;xd&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;g&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;500&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;yd&lt;&#x2F;span&gt;&lt;span&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;j&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;14&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;print(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#556633;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#99ad6a;&quot;&gt;¥&lt;&#x2F;span&gt;&lt;span style=&quot;color:#556633;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;xd&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;g&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;500&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;yd&lt;&#x2F;span&gt;&lt;span&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;j&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Which resulted in quite a nice looking plane effect:&lt;&#x2F;p&gt;
&lt;img class = smallimagewithinpost src=&quot;&#x2F;blog&#x2F;2023-5-18-500-byte-flightsim&#x2F;planeinitial.gif&quot;&gt; 
&lt;p&gt;Quite a lot of changes were required, however, to get this to fit into a smaller size, including:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Removing one of the plane&#x27;s wing lines (this was a significant cost to the visuals sadly, but saved a good lot of tokens).&lt;&#x2F;li&gt;
&lt;li&gt;Changing the logic for drawing the plane&#x27;s wing to remove the use of sin and cos. This means that the length of the wing now changes with the angle it&#x27;s drawn at but I don&#x27;t think it matters significantly.&lt;&#x2F;li&gt;
&lt;li&gt;Removing the plane&#x27;s tail line (which was not particularly noticeable anyway).&lt;&#x2F;li&gt;
&lt;li&gt;Removing the variables for the position of the plane on-screen, and instead using a call to the camera function so objects could be drawn at 0,0.&lt;&#x2F;li&gt;
&lt;li&gt;Changing print functions to use the &#x27;?&#x27; syntax&lt;&#x2F;li&gt;
&lt;li&gt;Removing the colour parameter from many of the drawing functions, as pico8 will draw objects in the last used colour if one isn&#x27;t specified.&lt;&#x2F;li&gt;
&lt;li&gt;Using the control code &amp;quot;\b&amp;quot; to position the body of the plane, instead of coordinates&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;All of these changes allowed for huge code compression when drawing the plane:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#151515;color:#e8e8d3;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span&gt;☉=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;camera
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;g&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;999&lt;&#x2F;span&gt;&lt;span&gt;☉(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;64&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;j&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;80&lt;&#x2F;span&gt;&lt;span&gt;)?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#556633;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#99ad6a;&quot;&gt;\b⬆️&lt;&#x2F;span&gt;&lt;span style=&quot;color:#556633;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;14
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;line&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span&gt;,-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;,-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;)?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#556633;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#99ad6a;&quot;&gt;¥&lt;&#x2F;span&gt;&lt;span style=&quot;color:#556633;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;j&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cf6a4c;&quot;&gt;9
&lt;&#x2F;span&gt;&lt;span&gt;☉()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;final-touches&quot;&gt;Final Touches&lt;&#x2F;h2&gt;
&lt;p&gt;The last little bits of code in this demo are the main loop, which uses the classic Pico8 trick of goto and labels to replace an update function, and the game reset, done with a check to see if the player has hit the ground.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lua&quot; style=&quot;background-color:#151515;color:#e8e8d3;&quot; class=&quot;language-lua &quot;&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span style=&quot;color:#8fbfdc;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;z&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffb964;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Previously I also included a reset if the player was flying backwards (v&amp;lt;0), representing a restart due to stalling, but it consumed a few valuable characters.&lt;&#x2F;p&gt;
&lt;img class = smallimagewithinpost src=&quot;&#x2F;blog&#x2F;2023-5-18-500-byte-flightsim&#x2F;plane.gif&quot;&gt;
&lt;p&gt;If you got here, thanks for reading! All in all this jam was a fantastic opportunity to explore tiny sized code where every character counts, and I would highly recommend trying out a similar jam if you haven&#x27;t!&lt;&#x2F;p&gt;
</content>
    </entry>
    <entry xml:lang="en">
        <title>Sheep-like behavior: Part 1</title>
        <published>2023-04-03T00:00:00+00:00</published>
        <updated>2023-04-03T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://nic.dockerz.net/blog/2023-4-3-sheepai/" type="text/html"/>
        <id>https://nic.dockerz.net/blog/2023-4-3-sheepai/</id>
        <content type="html">&lt;img class = imagewithinpost src=&quot;&#x2F;blog&#x2F;2023-4-3-sheepai&#x2F;sheep.png&quot;&gt;
&lt;p&gt;Some of my friends and I have begun work on a game themed around Icelandic Shepherding, a peaceful experience where the player wanders the landscape finding and gathering their sheep. The first step i&#x27;ve taken in this project is to create a robust sheep AI which can provide all of the behavior the sheep in the game will need.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;high-level-structure&quot;&gt;High-level structure&lt;&#x2F;h2&gt;
&lt;p&gt;I decided for this project to use a heavily modified boids algorithm, as it creates great looking flocking behaviour. This applies three forces to each sheep;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Cohesion: Sheep steer towards other nearby sheep.&lt;&#x2F;li&gt;
&lt;li&gt;Alignment: Sheep steer in the same direction as other nearby sheep.&lt;&#x2F;li&gt;
&lt;li&gt;Avoidance: Sheep steer away from other nearby sheep who are too close.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Additional behaviours are clearly required for our sheep however, including:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Obstacle avoidance: Sheep should steer away from or around any obstacles in their way.&lt;&#x2F;li&gt;
&lt;li&gt;Clearing finding: Sheep should steer towards open clearings, rather than hugging fences or staying near corners where they could be trapped by a predator.&lt;&#x2F;li&gt;
&lt;li&gt;Predator avoidance: Sheep should steer away from predator or sheepdogs.&lt;&#x2F;li&gt;
&lt;li&gt;Herd Finding: Sheep should seek out a herd if an individual or small group ends up separated.&lt;&#x2F;li&gt;
&lt;li&gt;Grazing: Sheep should seek out grass and eat it.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This is a lot of different forces all trying to influence how a single sheep moves and there will regularly be conflicts, with different forces pushing the sheep in different directions. In the boids algorithm these forces are balanced by having a &amp;quot;strength&amp;quot; variable for each force. Adjusting these strengths significantly changes the behaviour of the boids. For these sheep I will use a similar structure, combined with a state machine layered on top. I will have a strength variable for each force influencing the sheep&#x27;s movement, but these strengths will be dynamically adjusted based on the current state.&lt;&#x2F;p&gt;
&lt;p&gt;For example:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A sheep in the grazing state will be primarily influenced by the Grazing vector, which guides them to nearby grass to eat. The cohesion and avoidance vectors also have some influence, stopping them from wandering too far from their herd and from running into other sheep.&lt;&#x2F;li&gt;
&lt;li&gt;When they reach this grass, they move to the eating state; all of their influences are reduced, stopping their movement.&lt;&#x2F;li&gt;
&lt;li&gt;All of a sudden they see a predator! In the stressed state, the three boids vectors are increased, causing the herd to gather and move as one. The grazing vector is reduced to zero, and the predator avoidance vector is increased.&lt;&#x2F;li&gt;
&lt;li&gt;The obstacle avoidance vector should always remain fairly high for obvious reasons.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;starting-with-boids&quot;&gt;Starting with Boids&lt;&#x2F;h2&gt;
&lt;p&gt;There are many great explanations of boids online, but i will provide a quick summary here. It begins with a single entity, which has a field of awareness within which other sheep will influence it&#x27;s behavior. This is defined by a radius and an angle:
&lt;img class = smallimagewithinpost src=&quot;&#x2F;blog&#x2F;2023-4-3-sheepai&#x2F;awareness.svg&quot;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Three forces are then applied to the sheep, based on those in it&#x27;s sight radius:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Cohesion: Sheep steer towards other nearby sheep.
&lt;img class = smallimagewithinpost src=&quot;&#x2F;blog&#x2F;2023-4-3-sheepai&#x2F;cohesion.svg&quot;&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Alignment: Sheep steer in the same direction as other nearby sheep.
&lt;img class = smallimagewithinpost src=&quot;&#x2F;blog&#x2F;2023-4-3-sheepai&#x2F;alignment.svg&quot;&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Avoidance: Sheep steer away from other nearby sheep who are within a smaller avoidance radius.
&lt;img class = smallimagewithinpost src=&quot;&#x2F;blog&#x2F;2023-4-3-sheepai&#x2F;avoidance.svg&quot;&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Appling these three forces, with manually controlled weightings, creates fantastic behavior, which can be seen in this gif:
&lt;img class = smallimagewithinpost src=&quot;&#x2F;blog&#x2F;2023-4-3-sheepai&#x2F;boids.gif&quot;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;obstacle-avoidance&quot;&gt;Obstacle Avoidance&lt;&#x2F;h2&gt;
&lt;p&gt;Obstacle avoidance is an interesting problem for these sheep, and i read about and implemented several steering algorithms in the process of finding one which worked well for this application. The final algorithm i&#x27;m using is a two-part solution, using two sets of raycasts.&lt;&#x2F;p&gt;
&lt;p&gt;The first is a longer-distance raycast which detects any nearby obstacles in front of the sheep, and gently applies a force directing the sheep away from them. Each raycast adds it&#x27;s direction multiplied by it&#x27;s length before it hit an obstacle (or the maximum distance if it didn&#x27;t hit) to the output direction, which is then normalised.
&lt;img class = smallimagewithinpost src=&quot;&#x2F;blog&#x2F;2023-4-3-sheepai&#x2F;obstacleavoid.svg&quot;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This force alone means that the sheep will avoid walls fairly well, though as you can see in the gif below they still hit and slide along walls in an undesirable way when the crowding of other sheep pushes them into it.
&lt;img class = smallimagewithinpost src=&quot;&#x2F;blog&#x2F;2023-4-3-sheepai&#x2F;hittingwalls.gif&quot;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;To counteract this, a second force is added. This force is much stronger but occurs in a much smaller region around the sheep, stopping them from actually colliding with walls.
&lt;img class = smallimagewithinpost src=&quot;&#x2F;blog&#x2F;2023-4-3-sheepai&#x2F;collision.svg&quot;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This successfully stops the sheep from sliding along walls, but introduces some other undesirable behavior, which will be addressed in the next section:
&lt;img class = smallimagewithinpost src=&quot;&#x2F;blog&#x2F;2023-4-3-sheepai&#x2F;overcrowded.gif&quot;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;crowding&quot;&gt;Crowding&lt;&#x2F;h2&gt;
&lt;p&gt;You can see at the end of the last section that while the sheep are successfully avoiding obstacles, they are crowding up significantly when they reach choke-points in the map. We could increase the &amp;quot;avoidance&amp;quot; bias in the initial boids forces, but that would actually prevent them from moving through tight gaps as the force of the sheep pushing back would turn the sheep stuck behind around, splitting the herd. The desired behavior to match real-life sheep would be to have each sheep slow down, allowing those in front to pass through before moving forward themselves. To this end, each sheep checks how many sheep are in it&#x27;s field of view and limits it&#x27;s maximum speed proportional to this value. This results in much improved behavior during all points of herding, but particularly in map chokepoints.&lt;&#x2F;p&gt;
&lt;img class = smallimagewithinpost src=&quot;&#x2F;blog&#x2F;2023-4-3-sheepai&#x2F;crowdslowdown.gif&quot;&gt;
&lt;h2 id=&quot;moving-to-navmeshes&quot;&gt;Moving to Navmeshes&lt;&#x2F;h2&gt;
&lt;p&gt;Up until this point, all of the sheep AI work has been based on two fairly significant assumptions.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;The ground which the sheep walk on is flat.&lt;&#x2F;li&gt;
&lt;li&gt;The obstacles which the sheep have to avoid are vertical walls.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;This clearly will not be adequate for our game, as the sheep need to traverse rolling hills and mountainsides while avoiding obstacles which aren&#x27;t walls, such as cliffs or rivers. Our current raycasting system for obstacle avoidance will not work for these types of obstacles, and so adjustment is required.&lt;&#x2F;p&gt;
&lt;img class = smallimagewithinpost src=&quot;&#x2F;blog&#x2F;2023-4-3-sheepai&#x2F;hills.png&quot;&gt; 
&lt;p&gt;Initially I investigated creating invisible colliders around these obstacles which the sheep could raycast into, but creating these colliders would be significant additional work when creating the map and terrain, which would be best avoided. Additionally, this doesn&#x27;t solve the issue of obstacle raycasts colliding with a gentle slope which the sheep should be able to walk up.&lt;&#x2F;p&gt;
&lt;p&gt;I then investigated sampling the terrain data for this information, using the slope of the terrain to determine whether an area was walkable or not, but this was a significant performance overhead for each sheep each frame.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, a much easier solution was found. By using the unity navmesh system, but not using the navmesh agent component, the sheep can still be controlled according to the boid (and other) forces, but can cast rays through the navmesh, rather than in the 3D physics environment. This means that all obstacle data can be managed by the navmesh, rather than colliders in the environment. Here you can see how the navmesh (in blue) looks on our rolling hills terrain.&lt;&#x2F;p&gt;
&lt;img class = smallimagewithinpost src=&quot;&#x2F;blog&#x2F;2023-4-3-sheepai&#x2F;navmesh.png&quot;&gt; 
&lt;p&gt;I hadn&#x27;t before considered using the navmesh in this way, rather than the conventional use of pathfinding, and will keep it in mind for future projects.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-end-of-part-one&quot;&gt;The end of part one&lt;&#x2F;h2&gt;
&lt;p&gt;All of this leaves us with lovely sheep herding behavior, and we can watch sheep intelligently herd in complex environments while successfully avoiding obstacles.&lt;&#x2F;p&gt;
&lt;div class=&quot;youtubevideoplayer&quot;&gt;&lt;iframe width=&#x27;100%&#x27; height=&#x27;100%&#x27; src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;DGNgJEUMtnw&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;&lt;&#x2F;div&gt;
&lt;p&gt;There is much more to do, however. The sheep shouldn&#x27;t be always moving and roaming about but instead stop to graze and relax, and then run to avoid predators when they arise, or when they are being herded. I will create a second part to this post, expanding on the behavior of these sheep.&lt;&#x2F;p&gt;
</content>
    </entry>
    <entry xml:lang="en">
        <title>PicoCad Jam 100</title>
        <published>2023-03-30T00:00:00+00:00</published>
        <updated>2023-03-30T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://nic.dockerz.net/blog/2023-3-30-picocad-hell/" type="text/html"/>
        <id>https://nic.dockerz.net/blog/2023-3-30-picocad-hell/</id>
        <content type="html">&lt;img class = imagewithinpost src=&quot;&#x2F;blog&#x2F;2023-3-30-picocad-hell&#x2F;slowspin.gif&quot;&gt;
&lt;p&gt;I entered the 100th PicoCAD jam, a challenge to create a tiny themed 3D model in the very limited modelling program PicoCAD. PicoCAD was created in Pico8 by the extremely talented &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;johanpeitz&quot;&gt;Johan Peitz&lt;&#x2F;a&gt; and was designed to be a minimal but capable tool for creating small 3D models. This was my first attempt at modelling with PicoCAD, and I found the it to be very straightforward to pick up and easy to use, I would definitely consider it in the future for simple modelling projects, and would love to create a small 3d title in Pico8 now that it&#x27;s clear mesh-based 3D is very possible.&lt;&#x2F;p&gt;
&lt;p&gt;The PicoCAD jam runs regularly but this one had the theme of &amp;quot;hell&amp;quot;, in celebration of Johan Peitz&#x27;s new game &lt;a href=&quot;https:&#x2F;&#x2F;johanpeitz.itch.io&#x2F;hellgineers&quot;&gt;Hellgineers&lt;&#x2F;a&gt;. My entry was an attempt to recreate the style and appeal of the Hellgineers graphics in 3D, and I believe I had some success. My entry ended up coming 4th overall in the competition, and 2nd in the category of visuals.&lt;&#x2F;p&gt;
&lt;p&gt;One significant limitation of PicoCAD is the available texture space, which cannot exceed the 128*128 4-bit (only 16 colours!) spritesheet which Pico8 has by default. I was initially concerned that this would prove to be a significant problem, but ended up actually using very little of the texture space available. Given more time to work on my entry, i would have loved to create more advanced and higher resolution textures. Here is the final spritesheet used:
&lt;img class = imagewithinpost src=&quot;&#x2F;blog&#x2F;2023-3-30-picocad-hell&#x2F;textures.png&quot;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Some additional renders, showing the different objects in the scene and the wireframe of the model;
&lt;img class = imagewithinpost src=&quot;&#x2F;blog&#x2F;2023-3-30-picocad-hell&#x2F;objects.gif&quot;&gt;
&lt;img class = imagewithinpost src=&quot;&#x2F;blog&#x2F;2023-3-30-picocad-hell&#x2F;wireframe.gif&quot;&gt;&lt;&#x2F;p&gt;
</content>
    </entry>
</feed>
